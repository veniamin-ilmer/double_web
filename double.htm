<!DOCTYPE html>
<title>Double to 128</title>
<style>
article {
  height: 100vh;
  width: 100vw;
  max-height: 100vw;
  max-width: 100vh;
  margin: auto;
  position: absolute;
  top:0;bottom:0;
  left:0;right:0;
  display: flex;
  flex-direction: column;
  gap:2px;
}

article > div {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}

button {
  aspect-ratio: 5/4;
  font-size: 8vh;
  line-height: 8vh;
}

</style>

<script>
window.onload = function() {
  //Functions
  const clicked = (x, y) => {
    let new_num = NEXT_NUM;
    for (let z = 0; z < 4; z++) {
      if (checkNeighbors(x, y, new_num)) {
        new_num *= 2;
      } else {
        break;
      }
    }
    if (new_num == 128) {
      alert("You Win! :D");
      resetAll();
      return;
    } else {
      set(x, y, new_num);
    }
    if (isFilled()) {
      alert("You Lost :(");
      button = document.getElementById("next_num");
      button.textContent = "ðŸ’£";
      button.disabled = false;
    } else {
      setNextNum();
    }
  }

  //Checks if neighboring cells match current cell, and resets them if found.
  const checkNeighbors = (x, y, num) => {
    const first_y = y === 0;
    const last_y = y === CELL_ROWS - 1;
    const first_x = x === 0;
    const last_x = x === CELL_COLUMNS - 1;

    let found = false;
    if (!first_y && GRID[x][y - 1] === num) {
      reset(x, y - 1);
      found = true;
    }
    if (!first_x && GRID[x - 1][y] === num) {
      reset(x - 1, y);
      found = true;
    }
    if (!last_y && GRID[x][y + 1] === num) {
      reset(x, y + 1);
      found = true;
    }
    if (!last_x && GRID[x + 1][y] === num) {
      reset(x + 1, y);
      found = true;
    }
    return found;
  }
  
  const reset = (x, y) => {
    GRID[x][y] = 0;
    const button = BUTTONS[x][y];
    button.textContent = "";
    button.disabled = false;
  }
  
  const resetAll = () => {
    for (let x = 0; x < CELL_ROWS; x++) {
      for (let y = 0; y < CELL_COLUMNS; y++) {
        reset(x, y);
      }
    }
    setNextNum();
  }
  
  const set = (x, y, new_num) => {
    GRID[x][y] = new_num;
    const button = BUTTONS[x][y];
    button.textContent = new_num;
    button.disabled = true;
  }
  
  const isFilled = () => {
    for (let x = 0; x < CELL_ROWS; x++) {
      for (let y = 0; y < CELL_COLUMNS; y++) {
        if (GRID[x][y] === 0) {
          return false;
        }
      }
    }
    return true;
  }
  
  //2 appears twice as often as 4.
  //4 appears twice as often as 8.
  //8 appears twice as often as 16.
  //etc, up to 128.
  const setNextNum = () => {
    //Int range between 1 (inclusive) and 63 (inclusive)
    const rand = Math.floor(Math.random() * 63) + 1;

    if (rand === 1) {
      NEXT_NUM = 64;
    } else if (rand >= 2 && rand <= 3) {
      NEXT_NUM = 32;
    } else if (rand >= 4 && rand <= 7) {
      NEXT_NUM = 16;
    } else if (rand >= 8 && rand <= 15) {
      NEXT_NUM = 8;
    } else if (rand >= 16 && rand <= 31) {
      NEXT_NUM = 4;
    } else {
      NEXT_NUM = 2;
    }
    NEXT_NUM_BUTTON.textContent = NEXT_NUM;
  }

  //Globals
  const NEXT_NUM_BUTTON = document.getElementById("next_num");
  const BUTTONS = [
    [document.getElementById("a1"), document.getElementById("a2"), document.getElementById("a3"), document.getElementById("a4")],
    [document.getElementById("b1"), document.getElementById("b2"), document.getElementById("b3"), document.getElementById("b4")],
    [document.getElementById("c1"), document.getElementById("c2"), document.getElementById("c3"), document.getElementById("c4")],
    [document.getElementById("d1"), document.getElementById("d2"), document.getElementById("d3"), document.getElementById("d4")],
  ];
  const CELL_ROWS = 4;
  const CELL_COLUMNS = 4;

  let GRID = [
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ];
  let NEXT_NUM = 0;

  //Main
  NEXT_NUM_BUTTON.onclick = function() {
    resetAll();
    NEXT_NUM_BUTTON.disabled = true;
  }
  setNextNum();

  for (let x = 0; x < CELL_ROWS; x++) {
    for (let y = 0; y < CELL_COLUMNS; y++) {
      BUTTONS[x][y].onclick = function() { clicked(x, y); }
    }
  }
}
</script>

<article>
  <div>
    <button disabled id="next_num"></button>
  </div>
  <div>
    <button id="a1"></button>
    <button id="a2"></button>
    <button id="a3"></button>
    <button id="a4"></button>
  </div>
  <div>
    <button id="b1"></button>
    <button id="b2"></button>
    <button id="b3"></button>
    <button id="b4"></button>
  </div>
  <div>
    <button id="c1"></button>
    <button id="c2"></button>
    <button id="c3"></button>
    <button id="c4"></button>
  </div>
  <div>
    <button id="d1"></button>
    <button id="d2"></button>
    <button id="d3"></button>
    <button id="d4"></button>
  </div>
</article>
